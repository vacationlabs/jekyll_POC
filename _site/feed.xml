<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Your awesome title</title>
    <description>Write an awesome description for your new site here. You can edit this line in _config.yml. It will appear in your document head meta (for Google search results) and in your feed.xml site description.
</description>
    <link>http://yourdomain.com/</link>
    <atom:link href="http://yourdomain.com/feed.xml" rel="self" type="application/rss+xml"/>
    <pubDate>Tue, 23 Feb 2016 16:13:24 +0530</pubDate>
    <lastBuildDate>Tue, 23 Feb 2016 16:13:24 +0530</lastBuildDate>
    <generator>Jekyll v3.1.1</generator>
    
      <item>
        <title>new new</title>
        <description>&lt;p&gt;The Settings page has multiple categories on the left navigation bar.&lt;/p&gt;

&lt;p&gt;The Settings page lets you edit the Support details that you provided while registering for vacation labs. These details include company name, website, support email, notification email, support phone, booking website, booking terms URL and mailing address.&lt;/p&gt;

&lt;p&gt;The branding tab gives you good control over your storefront customization. You can upload/change your logo, background image, booking website banner and favicon through the settings.&lt;/p&gt;
</description>
        <pubDate>Tue, 23 Feb 2016 00:00:00 +0530</pubDate>
        <link>http://yourdomain.com/support/getting-started/new-new</link>
        <guid isPermaLink="true">http://yourdomain.com/support/getting-started/new-new</guid>
        
        
        <category>support/getting-started</category>
        
      </item>
    
      <item>
        <title>My third blog</title>
        <description>&lt;div class=&quot;message&quot;&gt;
My first post in a new Jekyll-based blog!
&lt;/div&gt;

&lt;p&gt;I found Jekyll much more powerful than txt2site.&lt;/p&gt;

&lt;!--more--&gt;
&lt;p&gt;Several useful links if you want to make your Jekyll-based blog:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;http://jekyllrb.com/docs/home/&quot;&gt;Jekyll docs&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://joshualande.com/jekyll-github-pages-poole/&quot;&gt;How I Created a Beautiful and Minimal Blog Using Jekyll, Github Pages, and poole&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://txt2tags.wordpress.com/2014/04/09/use-txt2tags-markup-in-jekyll/&quot;&gt;Use txt2tags markup in Jekyll&lt;/a&gt;  Extremely useful if you need to move some of your old content from &lt;a href=&quot;http://home.deds.nl/~svg_experimenten/txt2site/&quot;&gt;txt2site&lt;/a&gt; to Jekyll&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Github repo with the sources of this blog can be found here: &lt;a href=&quot;https://github.com/vitalyrepin/vrepinblog&quot;&gt;https://github.com/vitalyrepin/vrepinblog&lt;/a&gt;&lt;/p&gt;
</description>
        <pubDate>Thu, 04 Feb 2016 00:00:00 +0530</pubDate>
        <link>http://yourdomain.com/blog/travel-and-tourism/third-block</link>
        <guid isPermaLink="true">http://yourdomain.com/blog/travel-and-tourism/third-block</guid>
        
        <category>jekyll</category>
        
        <category>blogging</category>
        
        
        <category>blog/travel-and-tourism</category>
        
      </item>
    
      <item>
        <title>My second blog</title>
        <description>&lt;h3 id=&quot;overview&quot;&gt;Overview&lt;/h3&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/social-dbl.png&quot; alt=&quot;alt text&quot; title=&quot;Logo Title Text 1&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://www.elastic.co/products/logstash&quot;&gt;Logstash&lt;/a&gt; is a great tool to process the logs and extract valuable data from them. There are many useful Logstash
&lt;a href=&quot;https://www.elastic.co/guide/en/logstash/current/filter-plugins.html&quot;&gt;filter plugins&lt;/a&gt; which make it easy to process the raw log data. However, sometimes
external utilities are required to process the data in a more complicated way than existing filter plugins can.&lt;/p&gt;

&lt;p&gt;It’s possible to &lt;a href=&quot;https://www.elastic.co/guide/en/logstash/current/_how_to_write_a_logstash_filter_plugin.html&quot;&gt;code your own filter plugin&lt;/a&gt; in Ruby
but what to do if you already have the filter implemented in some other programming language and want to reuse it in Logstash?&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;python
s = &quot;Python syntax highlighting&quot;
print s
&lt;/code&gt;
&lt;!--more--&gt;&lt;/p&gt;

&lt;p&gt;In this case it’s easier to communicate with this external filter from Logstash. This article demonstrates the simplest way of incorporating external
applications into the Logstash pipeline:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Logstash launches external program and delivers the input data to it through command line arguments and stdin&lt;/li&gt;
  &lt;li&gt;External program writes results to stdout in any format understood by Logstash filters (e.g., JSON)&lt;/li&gt;
  &lt;li&gt;Logstash parses output of the external program and continues to handle it in the pipeline&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;It’s needless to say that it is not the very best approach in terms of performance.
E.g., if startup time of the external application is significant, you may consider
to launch this application once (as a daemon/service) and communicate with it using &lt;a href=&quot;http://en.wikipedia.org/wiki/%C3%98MQ&quot;&gt;ØMQ&lt;/a&gt; or other high-performance message queue.&lt;/p&gt;

&lt;p&gt;Detailed explanation and usage example are stated below.&lt;/p&gt;

&lt;h2 id=&quot;launching-external-program&quot;&gt;Launching external program&lt;/h2&gt;

&lt;p&gt;We will use &lt;a href=&quot;https://www.elastic.co/guide/en/logstash/current/plugins-filters-ruby.html&quot;&gt;ruby filter&lt;/a&gt; in order to launch external application and capture its output:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;n&quot;&gt;filter&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;# &amp;lt;...&amp;gt; &amp;lt;- More filters are above&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;# Launching external script to make a deeper text analysis&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;file_path&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=~&lt;/span&gt; &lt;span class=&quot;sr&quot;&gt;/.+/&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
       &lt;span class=&quot;n&quot;&gt;ruby&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
          &lt;span class=&quot;n&quot;&gt;code&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&#39;require &quot;open3&quot;
                   body_path = event[&quot;file_path&quot;]
                   cmd =  &quot;/opt/bin/my_filter.py -f #{file_path}&quot;
                   stdin, stdout, stderr = Open3.popen3(cmd)
                   event[&quot;process_result&quot;] = stdout.read
                   err = stderr.read
                   if err.to_s.empty?
                     filter_matched(event)
                   else
                     event[&quot;ext_script_err_msg&quot;] = err
                   end&#39;&lt;/span&gt;
          &lt;span class=&quot;n&quot;&gt;remove_field&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;file_path&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
       &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;# Parsing of the process_result is here (see the next section)&lt;/span&gt;
 &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Note:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;External application &lt;code class=&quot;highlighter-rouge&quot;&gt;/opt/bin/my_filter.py&lt;/code&gt; is launched only if &lt;code class=&quot;highlighter-rouge&quot;&gt;file_path&lt;/code&gt; field is not empty.  This field shall be extracted earlier in the filter pipeline. It’s value (&lt;code class=&quot;highlighter-rouge&quot;&gt;#{file_path}&lt;/code&gt;) is used in
the command line to launch external filter.&lt;/li&gt;
  &lt;li&gt;stdin handle is accessible for our tiny ruby script and it can be used to send more data to the external program (&lt;code class=&quot;highlighter-rouge&quot;&gt;/opt/bin/my_filter.py&lt;/code&gt;).&lt;/li&gt;
  &lt;li&gt;If application stderr is not empty, filter is not considered to be successful and stderr content is recorded into &lt;code class=&quot;highlighter-rouge&quot;&gt;ext_script_err_msg&lt;/code&gt; field.&lt;/li&gt;
  &lt;li&gt;If processing was successful,  output of the external program is recorded into &lt;code class=&quot;highlighter-rouge&quot;&gt;process_result&lt;/code&gt; filed and &lt;code class=&quot;highlighter-rouge&quot;&gt;file_path&lt;/code&gt; field is removed&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;parsing-output-of-the-external-program-json&quot;&gt;Parsing output of the external program (JSON)&lt;/h3&gt;

&lt;p&gt;The easiest way to deliver the data back to Logstash is to use one of the structured data formats understood by Logstash filters: &lt;a href=&quot;https://www.elastic.co/guide/en/logstash/current/plugins-filters-json.html&quot;&gt;JSON&lt;/a&gt;,
&lt;a href=&quot;https://www.elastic.co/guide/en/logstash/current/plugins-filters-xml.html&quot;&gt;XML&lt;/a&gt; or more old-fashioned &lt;a href=&quot;https://www.elastic.co/guide/en/logstash/current/plugins-filters-kv.html&quot;&gt;key-value (kv)&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Example with JSON:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;  &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;process_result&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=~&lt;/span&gt; &lt;span class=&quot;sr&quot;&gt;/.+/&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
       &lt;span class=&quot;n&quot;&gt;json&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
          &lt;span class=&quot;n&quot;&gt;source&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;process_result&quot;&lt;/span&gt;
          &lt;span class=&quot;n&quot;&gt;remove_field&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;process_result&quot;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
       &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Note:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Field &lt;code class=&quot;highlighter-rouge&quot;&gt;process_result&lt;/code&gt; holds the output of the external application and is supposed to be in JSON format.&lt;/li&gt;
  &lt;li&gt;If parsing was successful JSON fields are becoming event fields and intermediate field &lt;code class=&quot;highlighter-rouge&quot;&gt;process_result&lt;/code&gt; is removed.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;several-words-about-exec-output-plugin&quot;&gt;Several words about exec output plugin&lt;/h3&gt;

&lt;p&gt;If you only need to launch external utility upon any matched Logstash event, you may consider to use simpler approach
– &lt;a href=&quot;https://www.elastic.co/guide/en/logstash/current/plugins-outputs-exec.html&quot;&gt;exec output plugin&lt;/a&gt;.&lt;/p&gt;

</description>
        <pubDate>Tue, 02 Feb 2016 00:00:00 +0530</pubDate>
        <link>http://yourdomain.com/blog/economy/second-blog</link>
        <guid isPermaLink="true">http://yourdomain.com/blog/economy/second-blog</guid>
        
        <category>logstash</category>
        
        <category>elasticsearch</category>
        
        <category>ruby</category>
        
        
        <category>blog/economy</category>
        
      </item>
    
      <item>
        <title>My first blog</title>
        <description>&lt;div class=&quot;message&quot;&gt;
My first post in a new Jekyll-based blog!
&lt;/div&gt;

&lt;p&gt;I found Jekyll much more powerful than txt2site.&lt;/p&gt;

&lt;!--more--&gt;
&lt;p&gt;Several useful links if you want to make your Jekyll-based blog:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;http://jekyllrb.com/docs/home/&quot;&gt;Jekyll docs&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://joshualande.com/jekyll-github-pages-poole/&quot;&gt;How I Created a Beautiful and Minimal Blog Using Jekyll, Github Pages, and poole&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://txt2tags.wordpress.com/2014/04/09/use-txt2tags-markup-in-jekyll/&quot;&gt;Use txt2tags markup in Jekyll&lt;/a&gt;  Extremely useful if you need to move some of your old content from &lt;a href=&quot;http://home.deds.nl/~svg_experimenten/txt2site/&quot;&gt;txt2site&lt;/a&gt; to Jekyll&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Github repo with the sources of this blog can be found here: &lt;a href=&quot;https://github.com/vitalyrepin/vrepinblog&quot;&gt;https://github.com/vitalyrepin/vrepinblog&lt;/a&gt;&lt;/p&gt;
</description>
        <pubDate>Mon, 01 Feb 2016 00:00:00 +0530</pubDate>
        <link>http://yourdomain.com/blog/travel-and-tourism/first-blog</link>
        <guid isPermaLink="true">http://yourdomain.com/blog/travel-and-tourism/first-blog</guid>
        
        <category>jekyll</category>
        
        <category>blogging</category>
        
        
        <category>blog/travel-and-tourism</category>
        
      </item>
    
      <item>
        <title>Configure your account settings</title>
        <description>&lt;p&gt;The Settings page has multiple categories on the left navigation bar.&lt;/p&gt;

&lt;p&gt;The Settings page lets you edit the Support details that you provided while registering for vacation labs. These details include company name, website, support email, notification email, support phone, booking website, booking terms URL and mailing address.&lt;/p&gt;

&lt;p&gt;The branding tab gives you good control over your storefront customization. You can upload/change your logo, background image, booking website banner and favicon through the settings.&lt;/p&gt;
</description>
        <pubDate>Sat, 30 Jan 2016 00:00:00 +0530</pubDate>
        <link>http://yourdomain.com/support/getting-started/configure-your-account-settings</link>
        <guid isPermaLink="true">http://yourdomain.com/support/getting-started/configure-your-account-settings</guid>
        
        
        <category>support/getting-started</category>
        
      </item>
    
      <item>
        <title>What is a storefront</title>
        <description>&lt;p&gt;What is a storefront&lt;/p&gt;
</description>
        <pubDate>Sat, 02 Jan 2016 00:00:00 +0530</pubDate>
        <link>http://yourdomain.com/support/using-your-storefront/what-is-a-storefront</link>
        <guid isPermaLink="true">http://yourdomain.com/support/using-your-storefront/what-is-a-storefront</guid>
        
        
        <category>support/using-your-storefront</category>
        
      </item>
    
      <item>
        <title>Using the Vacation Labs dashboard</title>
        <description>&lt;p&gt;Using the Vacation Labs dashboard&lt;/p&gt;
</description>
        <pubDate>Sat, 02 Jan 2016 00:00:00 +0530</pubDate>
        <link>http://yourdomain.com/support/other-features/using-the-vacation-labs-dashboard</link>
        <guid isPermaLink="true">http://yourdomain.com/support/other-features/using-the-vacation-labs-dashboard</guid>
        
        
        <category>support/other-features</category>
        
      </item>
    
      <item>
        <title>Using trip variants</title>
        <description>&lt;p&gt;Using trip variants&lt;/p&gt;
</description>
        <pubDate>Sat, 02 Jan 2016 00:00:00 +0530</pubDate>
        <link>http://yourdomain.com/support/managing-your-trips/using-trip-variants</link>
        <guid isPermaLink="true">http://yourdomain.com/support/managing-your-trips/using-trip-variants</guid>
        
        
        <category>support/managing-your-trips</category>
        
      </item>
    
      <item>
        <title>how to upload trip content</title>
        <description>&lt;p&gt;how to upload trip content&lt;/p&gt;
</description>
        <pubDate>Fri, 01 Jan 2016 00:00:00 +0530</pubDate>
        <link>http://yourdomain.com/support/using-your-storefront/how-to-upload-trip-content</link>
        <guid isPermaLink="true">http://yourdomain.com/support/using-your-storefront/how-to-upload-trip-content</guid>
        
        
        <category>support/using-your-storefront</category>
        
      </item>
    
      <item>
        <title>How to view/edit bookings</title>
        <description>&lt;p&gt;How to view/edit bookings&lt;/p&gt;
</description>
        <pubDate>Fri, 01 Jan 2016 00:00:00 +0530</pubDate>
        <link>http://yourdomain.com/support/other-features/how-to-view-edit-bookings</link>
        <guid isPermaLink="true">http://yourdomain.com/support/other-features/how-to-view-edit-bookings</guid>
        
        
        <category>support/other-features</category>
        
      </item>
    
  </channel>
</rss>
